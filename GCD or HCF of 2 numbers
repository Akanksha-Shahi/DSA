#include<iostream>
using namespace std;
int gcd ( int a, int b){
  for (int i= min (a,b); i>=1; i--){
    if (a % i ==0 && b % i==0){
      return i;       // Return the first common divisor found
      break;}}}      // Exit the loop after finding the GCD
int main (){
  int a= 48, b = 18;
  cout <<  "Finding GCD for: " << a << " and " << b << endl;
  cout << "GCD is: " << gcd(a, b) << endl;
  return 0;
}        



// EUCLIDEAN ALGORITHM FOR GCD
#include <iostream>
using namespace std;
int gcd(int a, int b) {
    while (a>0 && b>0) {
        if (a > b) {
            a = a % b; // Reduce a by the remainder of a divided by b
        } else {
            b = b % a; // Reduce b by the remainder of b divided by a
        }}
    if ( a== 0) {
        return b; // If a is zero, return b as GCD
    }else {
        return a; // If b is zero, return a as GCD
    }  }
int main() {
    int a = 48, b = 18;
    cout << "Finding GCD for: " << a << " and " << b << endl;
    cout << "GCD is: " << gcd(a, b) << endl;
    return 0;
}         
