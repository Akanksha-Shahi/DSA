// brute solution: 
#include<iostream>
#include<vector>
using namespace std;
void majorityEle( vector<int> &arr, int n){
    for (int i =0; i<n; i++){
        int count = 0;
        for (int j=0; j<n; j++){
            if ( arr[j] == arr[i]){
                count++; // counts the occurrences of arr[i]
            }
        }
        if ( count > n/2 ){
            cout<< arr[i]<< " is the majority element"<< endl; // prints the majority element
            return;
        }
    }
}
int main(){
    int n;
    cout<<" enter the size of the array:";
    cin>>n;
    vector<int> arr(n);
    cout<<" enter the elements of the array:";
    for( int i=0; i<n; i++){
        cin>> arr[i]; // reads the elements of the array
    }
    majorityEle(arr, n);
    return 0;
}


// better solution: will use hashing
#include<iostream>
#include <map>
#include<vector>
using namespace std;
int majorityElement( vector<int> &arr, int n){
    map<int, int> mpp;
    for ( int i=0; i<n; i++){
        mpp[arr[i]]++; // counts the occurrences of arr[i]
    for (auto it: mpp){    
        if ( it.second > n/2 ){
            return it.first; // returns the majority element if found
        }
    }
    return -1; // returns -1 if no majority element is found
}}
int main(){
    int n;
    cout<<" enter the size of the array:";
    cin>>n;
    vector<int> arr(n);
    cout<<" enter the elements of the array:";
    for( int i=0; i<n; i++){
        cin>> arr[i]; // reads the elements of the array
    }
    int result = majorityElement(arr, n);
    if ( result != -1 ){
        cout<< result<< " is the majority element"<< endl; // prints the majority element
    } else {
        cout<<" no majority element found"<< endl;
    }
    return 0;
}



// optimal solution: will use moore's voting algorithm
#include<iostream>
#include<vector>
using namespace std;
int majorityElement( vector<int> &arr, int n){
    int count=0;
    int ele;
    for( int i=0; i<n; i++){
        if ( count == 0 ){
            ele = arr[i]; // sets the current element as the candidate
        }
        else if ( arr[i] == ele ){
            count++; // increments the count if the current element is the candidate
        } else {
            count--; // decrements the count if the current element is not the candidate
        }
    }
    int count1 = 0;
    for ( int i=0; i<n; i++){
        if ( arr[i] == ele ){
            count1++; // counts the occurrences of the candidate
        }
    }
    if ( count1 > n/2 ){
        return ele; // returns the majority element if found
    } else {
        return -1; // returns -1 if no majority element is found
    }}
int main(){
    int n;
    cout<<" enter the size of the array:";
    cin>>n;
    vector<int> arr(n);
    cout<<" enter the elements of the array:";
    for( int i=0; i<n; i++){
        cin>> arr[i]; // reads the elements of the array
    }
    int result = majorityElement(arr, n);
    if ( result != -1 ){
        cout<< result<< " is the majority element"<< endl; // prints the majority element
    } else {
        cout<<" no majority element found"<< endl;
    }
    return 0;
}    
