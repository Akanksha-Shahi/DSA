// SPIRAL MATRIX
#include <iostream>
#include <vector>
using namespace std;
vector<int> spiralMatrix(vector<vector<int>>& mat) {
    int n = mat.size();
    int m = mat[0].size();
    int left = 0, right = m-1, top = 0, bottom = n-1;
    vector<int> ans;
    while (left <= right && top <= bottom) {
        // Traverse from left to right
        for (int i = left; i <= right; i++) {
            ans.push_back(mat[top][i]);
        }
        top++;
        // Traverse from top to bottom
        for (int i = top; i <= bottom; i++) {
            ans.push_back(mat[i][right]);
        }
        right--;
        
        if (top <= bottom) {
            // Traverse from right to left
            for (int i = right; i >= left; i--) {
                ans.push_back(mat[bottom][i]);
            }
            bottom--;
        }
        if (left <= right) {
            // Traverse from bottom to top
            for (int i = bottom; i >= top; i--) {
                ans.push_back(mat[i][left]);
            }
            left++;
        }
    }
    return ans;
}
int main() {
    int n, m;
    cout << "Enter the number of rows and columns of the matrix: ";
    cin >> n >> m;
    vector<vector<int>> matrix(n, vector<int>(m));
    cout << "Enter the elements of the matrix: ";
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> matrix[i][j];
        }
    }

    vector<int> result = spiralMatrix(matrix);

    cout << "Spiral order of the matrix: ";
    for (const auto& elem : result) {
        cout << elem << " ";
    }
    cout << endl;

    return 0;
}
