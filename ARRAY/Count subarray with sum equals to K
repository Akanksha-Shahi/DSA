// brute: start with 1st elemnet and goes on adding further elements and check if sum == k
#include<iostream>
#include<vector>
using namespace std;
void countSubarraywithsum(vector<int> &arr, int n, int k ){
    int count = 0;
    for (int i =0; i<n; i++){
        for( int j=i; j<n; j++){
            int sum = 0;
            for (int k = i; k<=j; k++){
                sum+=arr[k];
            }
            if (sum ==k){
                count++;
            }
        }
    }
    cout<<" Count of subarray with sum equal to k is: "<< count<<endl;
}
int main(){
    int n, k;
    cout<<"Enter the size of array: ";
    cin>>n;
    vector<int> arr (n);
    cout<<" Enter the elements of array: ";
    for ( int i =0; i<n ; i++){
        cin>> arr[i];
    }
    cout<<" Enter the value of k :";
    cin>> k;
    countSubarraywithsum(arr, n , k);
    return 0;
}



// better: will increase the speed by removing 1 loop
#include<iostream>
#include<vector>
using namespace std;
void countSubarraywithsum(vector<int> &arr, int n, int k){
    int count = 0;
    for (int i =0; i<n; i++){
        int sum = 0;
        for( int j=i; j<n; j++){
            sum +=arr[j];
        if (sum ==k){
            count++;
        }}
    }
    cout<<" Count of subarray with sum equal to k is: "<< count<<endl;}
int main(){
    int n, k;
    cout<<"Enter the size of array: ";
    cin>>n;
    vector<int> arr (n);
    cout<<" Enter the elements of array: ";
    for ( int i =0; i<n ; i++){
        cin>> arr[i];
    }
    cout<<" Enter the value of k :";
    cin>> k;
    countSubarraywithsum(arr, n , k);
    return 0;
}



// optimal: using hashmap
#include <iostream>
#include <vector>
#include <map>
using namespace std;
int findallSubarraysWithSumK(vector<int>& arr, int n, int k) {
    map<int, int> mpp;
    mpp[0] = 1;
    int preSum = 0, count = 0;

    for (int i = 0; i < n; i++) {
        preSum += arr[i];
        int remove = preSum - k;
        count+= mpp[remove];
        mpp[preSum]++;}

    return count;
}
int main() {
    int n, k;
    cout << "Enter the size of array: ";
    cin >> n;
    vector<int> arr(n);
    cout << "Enter the elements of array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    cout << "Enter the value of k: ";
    cin >> k;

    int result = findallSubarraysWithSumK(arr, n, k);
    cout << "Count of subarrays with sum equal to k is: " << result << endl;

    return 0;
}
