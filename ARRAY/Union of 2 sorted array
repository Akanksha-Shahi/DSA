// Union of two sorted arrays
// brute force approach
#include <iostream>
#include <vector>
#include <set>
using namespace std;
vector<int> sortedArray(vector <int> a, vector <int> b){
    int n1= a.size();
    int n2= b.size();
    set <int> st;
    for ( int i=0; i<n1; i++){
        st.insert(a[i]); // inserts elements of the first array into the set
    }
    for ( int i=0; i<n2; i++){
        st.insert(b[i]); // inserts elements of the second array into the set
    }
    vector<int> temp;
    for ( auto it: st){
        temp.push_back(it); // copies the elements from the set to the result vector
    }
    return temp; // returns the result vector
}
int main(){
    vector<int> a = {1, 2, 3, 4, 5};
    vector<int> b = {2, 3, 5, 6, 7};
    vector<int> result = sortedArray(a, b);
    for ( int i=0; i<result.size(); i++){
        cout<< result[i]<<" "; // prints the union of the two arrays
    }
    return 0;
}



// optimal approach
#include <iostream>
#include <vector>
#include <set>
using namespace std;
vector<int> sortedArray(vector <int> a, vector <int> b){
    int n1= a.size();
    int n2= b.size();
    int i=0;
    int j=0;
    vector<int> unionArr;
    while ( i<n1 && j<n2){          // time complexity of this code is: O(n1 + n2)
        if ( a[i] <= b[j]){
            if( unionArr.size() == 0 || unionArr.back() != a[i]){
                unionArr.push_back(a[i]); // adds unique elements from the first array
            }
            i++;
        }
        else{
            if( unionArr.size() == 0 || unionArr.back() != b[j]){
                unionArr.push_back(b[j]); // adds unique elements from the second array
            }
            j++;
        }
    }
    while (j<n2){
        if( unionArr.size() == 0 || unionArr.back() != b[j]){
            unionArr.push_back(b[j]); // adds remaining unique elements from the second array
        }
        j++;
    }
    while (i<n1){
        if( unionArr.size() == 0 || unionArr.back() != a[i]){
            unionArr.push_back(a[i]); // adds remaining unique elements from the first array
        }
        i++;
    }
    return unionArr; // returns the result vector
}
int main(){
    vector<int> a = {1, 2, 3, 4, 5};
    vector<int> b = {2, 3, 5, 6, 7};
    vector<int> result = sortedArray(a, b);
    for ( int i=0; i<result.size(); i++){
        cout<< result[i]<<" "; // prints the union of the two arrays
    }
    return 0;
}
